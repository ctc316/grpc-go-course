syntax = "proto3";

package calculator;
option go_package="calculatorpb";

message Input2Num {
    float num1 = 1;
    float num2 = 2;
}

message SumRequest {
    Input2Num Input2Num = 1;
}

message SumResponse {
    float result = 1;
}

message PrimeDecomposeRequest {
    int64 num = 1;
}

message PrimeDecomposeReponse {
    int64 result = 1;
}

message ComputeAverageRequest {
    float num = 1;
}

message ComputeAverageResponse{
    float result = 1;
}

message FindMaximumRequest{
    float num = 1;
}

message FindMaximumResponse{
    float result = 1;
}

message SquareRootRequest{
    int32 number = 1;
}

message SquareRootResponse{
    double number_root = 1;
}

service CalculatorService{
    // Unary - ctc316
    rpc Sum(SumRequest) returns (SumResponse) {};

    // Server Streaming - ctc316
    rpc PrimeDecompose(PrimeDecomposeRequest) returns (stream PrimeDecomposeReponse) {};

    // Client Streaming - ctc316
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // BiDi Streaming - ctc316
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}